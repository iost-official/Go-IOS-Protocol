{
  "swagger": "2.0",
  "info": {
    "title": "rpc/apis.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/estimateGas": {
      "post": {
        "summary": "not supported yet",
        "operationId": "EstimateGas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcGasRes"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcRawTxReq"
            }
          }
        ],
        "tags": [
          "Apis"
        ]
      }
    },
    "/getBalance/{ID}/{useLongestChain}": {
      "get": {
        "summary": "get the balance of some account by account ID",
        "operationId": "GetBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcGetBalanceRes"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "description": "account ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "useLongestChain",
            "description": "useLongestChain means whether geting the balance also from pending blocks(in the longest chain)",
            "in": "path",
            "required": true,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "Apis"
        ]
      }
    },
    "/getBlockByHash/{hash}/{complete}": {
      "get": {
        "summary": "get the block by hash",
        "operationId": "GetBlockByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcBlockInfo"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "description": "block hash",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "complete",
            "description": "complete means return the whole block or just blockhead+txhash_list",
            "in": "path",
            "required": true,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "Apis"
        ]
      }
    },
    "/getBlockByNum/{num}/{complete}": {
      "get": {
        "summary": "get the block by number",
        "operationId": "getBlockByNum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcBlockInfo"
            }
          }
        },
        "parameters": [
          {
            "name": "num",
            "description": "block number",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "complete",
            "description": "complete means return the whole block or just blockhead+txhash_list",
            "in": "path",
            "required": true,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "Apis"
        ]
      }
    },
    "/getContract/{key}": {
      "get": {
        "summary": "get contract by cid",
        "operationId": "GetContract",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcGetContractRes"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "description": "contract id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apis"
        ]
      }
    },
    "/getHeight": {
      "get": {
        "summary": "get the current height of the blockchain",
        "operationId": "GetHeight",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcHeightRes"
            }
          }
        },
        "tags": [
          "Apis"
        ]
      }
    },
    "/getNetID": {
      "get": {
        "summary": "get the Net ID",
        "operationId": "GetNetID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcGetNetIDRes"
            }
          }
        },
        "tags": [
          "Apis"
        ]
      }
    },
    "/getState/{key}": {
      "get": {
        "summary": "get the value of the corresponding key in stateDB",
        "operationId": "GetState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcGetStateRes"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "description": "the key in the StateDB",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "field",
            "description": "get the value from StateDB,field is needed if StateDB[key] is a map.(we get StateDB[key][field] in this case).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apis"
        ]
      }
    },
    "/getTxByHash/{hash}": {
      "get": {
        "summary": "get the tx by hash",
        "operationId": "GetTxByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpctxRes"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "description": "transaction hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apis"
        ]
      }
    },
    "/getTxReceiptByHash/{hash}": {
      "get": {
        "summary": "get receipt by hash",
        "operationId": "GetTxReceiptByHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpctxReceiptRes"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "description": "transaction hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apis"
        ]
      }
    },
    "/getTxReceiptByTxHash/{hash}": {
      "get": {
        "summary": "get receipt by txhash",
        "operationId": "GetTxReceiptByTxHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpctxReceiptRes"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "description": "transaction hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Apis"
        ]
      }
    },
    "/getVersionInfo": {
      "get": {
        "summary": "get the version info",
        "operationId": "GetVersionInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcVersionInfoRes"
            }
          }
        },
        "tags": [
          "Apis"
        ]
      }
    },
    "/sendRawTx": {
      "post": {
        "summary": "receive encoded tx",
        "operationId": "SendRawTx",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcSendRawTxRes"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcRawTxReq"
            }
          }
        ],
        "tags": [
          "Apis"
        ]
      }
    },
    "/subscribe": {
      "post": {
        "summary": "subscribe an event",
        "operationId": "Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/definitions/rpcSubscribeRes"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcSubscribeReq"
            }
          }
        ],
        "tags": [
          "Apis"
        ]
      }
    }
  },
  "definitions": {
    "EventTopic": {
      "type": "string",
      "enum": [
        "TransactionResult",
        "ContractEvent",
        "ContractUserEvent",
        "ContractSystemEvent"
      ],
      "default": "TransactionResult"
    },
    "blockBlockHead": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64"
        },
        "parentHash": {
          "type": "string",
          "format": "byte"
        },
        "txsHash": {
          "type": "string",
          "format": "byte"
        },
        "merkleHash": {
          "type": "string",
          "format": "byte"
        },
        "info": {
          "type": "string",
          "format": "byte"
        },
        "number": {
          "type": "string",
          "format": "int64"
        },
        "witness": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "contractABI": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "payment": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "$ref": "#/definitions/contractCost"
        },
        "gas_price": {
          "type": "string",
          "format": "int64"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "contractContract": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "info": {
          "$ref": "#/definitions/contractInfo"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "contractCost": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "int64"
        },
        "net": {
          "type": "string",
          "format": "int64"
        },
        "CPU": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "contractInfo": {
      "type": "object",
      "properties": {
        "lang": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "abi": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/contractABI"
          }
        }
      }
    },
    "cryptoSignatureRaw": {
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "integer",
          "format": "int32"
        },
        "sig": {
          "type": "string",
          "format": "byte"
        },
        "pubKey": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "eventEvent": {
      "type": "object",
      "properties": {
        "topic": {
          "$ref": "#/definitions/EventTopic"
        },
        "data": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "rpcBlockInfo": {
      "type": "object",
      "properties": {
        "head": {
          "$ref": "#/definitions/blockBlockHead",
          "title": "BlockHead"
        },
        "hash": {
          "type": "string",
          "format": "byte",
          "title": "block hash"
        },
        "txs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/txTxRaw"
          },
          "title": "transaction list,works when complete is true"
        },
        "txhash": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "title": "transaction hash list,works when complete is false"
        },
        "receipts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/txTxReceiptRaw"
          },
          "title": "transaction receipt list"
        },
        "receiptHash": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "title": "transaction receiptHash list"
        }
      }
    },
    "rpcGasRes": {
      "type": "object",
      "properties": {
        "gas": {
          "type": "string",
          "format": "uint64",
          "title": "not support yet"
        }
      }
    },
    "rpcGetBalanceRes": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "string",
          "format": "int64",
          "title": "the queried balance"
        }
      }
    },
    "rpcGetContractRes": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/contractContract",
          "title": "contract id"
        }
      }
    },
    "rpcGetNetIDRes": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "NetID"
        }
      }
    },
    "rpcGetStateRes": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "title": "the value of the corresponding key in the StateDB"
        }
      }
    },
    "rpcHeightRes": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "int64",
          "title": "the height of the blockchain"
        }
      }
    },
    "rpcRawTxReq": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte",
          "title": "the rawdata of a tx"
        }
      }
    },
    "rpcSendRawTxRes": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "title": "the hash of the received transaction"
        }
      }
    },
    "rpcSubscribeReq": {
      "type": "object",
      "properties": {
        "topics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventTopic"
          },
          "title": "type of event:0-TransactionResult,1-ContractEvent,2-ContractUserEvent,3-ContractSystemEvent"
        }
      }
    },
    "rpcSubscribeRes": {
      "type": "object",
      "properties": {
        "ev": {
          "$ref": "#/definitions/eventEvent",
          "title": "event"
        }
      }
    },
    "rpcVersionInfoRes": {
      "type": "object",
      "properties": {
        "buildTime": {
          "type": "string",
          "title": "build time and git hash"
        },
        "gitHash": {
          "type": "string"
        }
      }
    },
    "rpctxReceiptRes": {
      "type": "object",
      "properties": {
        "txReceiptRaw": {
          "$ref": "#/definitions/txTxReceiptRaw",
          "title": "transaction receipt"
        },
        "hash": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpctxRes": {
      "type": "object",
      "properties": {
        "txRaw": {
          "$ref": "#/definitions/txTxRaw",
          "title": "the queried transaction"
        },
        "hash": {
          "type": "string",
          "format": "byte",
          "title": "transaction hash"
        }
      }
    },
    "txActionRaw": {
      "type": "object",
      "properties": {
        "contract": {
          "type": "string"
        },
        "actionName": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "txReceiptRaw": {
      "type": "object",
      "properties": {
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "txStatusRaw": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "txTxRaw": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "int64"
        },
        "expiration": {
          "type": "string",
          "format": "int64"
        },
        "gasLimit": {
          "type": "string",
          "format": "int64"
        },
        "gasPrice": {
          "type": "string",
          "format": "int64"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/txActionRaw"
          }
        },
        "signers": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "signs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cryptoSignatureRaw"
          }
        },
        "publisher": {
          "$ref": "#/definitions/cryptoSignatureRaw"
        }
      }
    },
    "txTxReceiptRaw": {
      "type": "object",
      "properties": {
        "txHash": {
          "type": "string",
          "format": "byte"
        },
        "gasUsage": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "$ref": "#/definitions/txStatusRaw"
        },
        "succActionNum": {
          "type": "integer",
          "format": "int32"
        },
        "receipts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/txReceiptRaw"
          }
        }
      }
    }
  }
}
